{"version":3,"sources":["./src/app/mapController.function.ts","./src/environments/environment.ts","../index.shared.ts","../shared/enums.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/decodeControllerButtonStates.function.ts","../shared/delayLog.function.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAyD;AACZ;AAG9B,SAAS,aAAa,CACnC,cAAiC;IAEjC,OAAO,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE;QAC7B,MAAM,IAAI,GAAG,IAAI,iDAAY,EAAE;QAC/B,MAAM,gBAAgB,GAAG,IAAI,yBAAyB,CAAC,cAAc,CAAC;QAEtE,IAAI,CAAC,IAAI,CAAC,GAAG,CACX,cAAc,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,EAClE,gBAAgB,CAAC,SAAS,CAAC,SAAS,CAAC,GAAG,EAAE;YACxC,IAAI,CAAC,WAAW,EAAE;YAClB,GAAG,EAAE;QACP,CAAC,CAAC,CACH;QAED,gBAAgB,CAAC,YAAY,EAAE;IACjC,CAAC,CAAC;AACJ,CAAC;AAED,MAAM,yBAAyB;IAG7B,YAAmB,cAAiC;QAAjC,mBAAc,GAAd,cAAc,CAAmB;QAFpD,cAAS,GAAkB,IAAI,4CAAO,EAAE;IAEe,CAAC;IAExD,eAAe;QACb,OAAO,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC,IAAI,CAC9C,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,IAAI,CAC/C;IACH,CAAC;IAED,YAAY;QACV,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACnC,yEAAQ,CAAC,mBAAmB,GAAG,GAAG,GAAG,aAAa,CAAC,CAAC;IACtD,CAAC;IAED,6BAA6B;IAC7B,OAAO;QACL,MAAM,IAAI,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ;QACzC,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,EAAE;QAClC,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,qBAAqB,CAAC,IAAI,CAAC;QAC7D,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;QACnC,MAAM,GAAG,GAAG,IAAI,CAAC,cAAc,CAAC,GAAG;QAEnC,IAAI,QAAQ,CAAC,MAAM,KAAK,CAAC,EAAE;YACzB,OAAO;SACR;aAAM,IAAI,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;YAC9B,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;SAC3C;aAAM;YACL,MAAM,GAAG,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC/B,MAAM,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;YAChC,MAAM,UAAU,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,EAAE,CAC/C,GAAG,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC,KAAK,KAAK,KAAK,CAC7D,CAAC;YAEF,IAAI,UAAU,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,mBAAmB,GAAG,UAAU,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC,CAAC;aAC/D;iBAAM;gBACL,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG;oBAC7B,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,SAAS,EAAE,IAAI,CAAC,GAAG,EAAE;iBACvE;gBACD,mCAAmC;gBACnC,OAAO,CAAC,GAAG,CAAC,aAAa,GAAG,GAAG,GAAG,MAAM,EAAE,EAAE,GAAG,EAAE,KAAK,EAAE,CAAC;aAC1D;SACF;QAED,OAAO,CAAC,GAAG,EAAE,CAAC;QAEd,IAAI,IAAI,CAAC,eAAe,EAAE,EAAE;YAC1B,IAAI,CAAC,YAAY,EAAE;SACpB;aAAM;YACL,OAAO,CAAC,GAAG,CAAC,gBAAgB,EAAE,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,CAAC;YACvD,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE;SACtB;IACH,CAAC;CACF;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9ED;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACbnE;AAAA;AAAA;AAAO,SAAS,kBAAkB,CAAC,MAAmB;IACpD,OAAO,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,KAAK,CAAC,CAAC;WAClD,CAAC,MAAM,CAAC,KAAK,KAAK,CAAC,IAAI,MAAM,CAAC,SAAS,KAAK,CAAC,CAAC;WAC9C,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC;WACvD,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC;WACjD,MAAM,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC3D,CAAC;AAEM,SAAS,YAAY,CAAC,MAAmB,EAAE,OAAoB;IACpE,OAAO,MAAM,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,IAAI,MAAM,CAAC,QAAQ,KAAK,OAAO,CAAC,QAAQ;AACvF,CAAC;;;;;;;;;;;;;ACZD;AAAA;AAAA,IAAY,iBAaX;AAbD,WAAY,iBAAiB;IAC3B,cAAc;IACd,4DAAuC;IACvC,sDAAiC;IACjC,wCAAmB;IACnB,gEAA2C;IAE3C,cAAc;IACd,8DAAyC;IACzC,4CAAuB;IACvB,0DAAqC;IACrC,wCAAmB;IACnB,oCAAe;AACjB,CAAC,EAbW,iBAAiB,KAAjB,iBAAiB,QAa5B;;;;;;;;;;;;;ACZD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAiE;AACR;AAEL;AAGH;AACuB;AACG;AACzC;;;;;ICG5B,0EAA2H;IACzH,uDACF;IAAA,4DAAM;;;IADJ,0DACF;IADE,oFACF;;;IAQI,wEAAyD;IACvD,6EAAwD;IAAA,uDAAc;IAAA,4DAAS;IACjF,qEAAe;;;IADS,0DAAiC;IAAjC,8FAAiC;IAAC,0DAAc;IAAd,+EAAc;;;IAZ9E,yEAAyE;IACvE,+GAEM;IAMN,yEAAyC;IACvC,sEAAK;IACH,gIAEe;;IACjB,4DAAM;IACR,4DAAM;IACR,4DAAM;;;IAfmB,0DAAuB;IAAvB,8HAAuB;IAUT,0DAAsB;IAAtB,iJAAsB;;;;IAezD,sEAAsC;IACpC,6EAKC;IAHC,iWAA8B;IAI9B,uDACF;IAAA,4DAAS;IACX,4DAAM;;;IALF,0DAAsD;IAAtD,4GAAsD;IAGtD,0DACF;IADE,sJACF;;;;IASJ,sEAAyC;IACvC,6EAIC;IAHoC,iWAA8B;IAIjE,uDACF;IAAA,4DAAS;IACX,4DAAM;;;IALF,0DAAsD;IAAtD,4GAAsD;IAGtD,0DACF;IADE,4IACF;;;;IASA,sEAAkD;IAChD,6EAIC;IAHC,yXAAsC;IAItC,uDACF;IAAA,4DAAS;IACX,4DAAM;;;;IALF,0DAA6E;IAA7E,2IAA6E;IAG7E,0DACF;IADE,+LACF;;;IARJ,wEAAiE;IAC/D,wHAQM;;IACR,qEAAe;;;IATS,0DAA0B;IAA1B,sJAA0B;;;IAYpD,yEAAmE;IACjE,qEAAI;IAAA,uDAAyI;IAAA,4DAAK;IAClJ,oEAAG;IAAA,0GAA+C;IAAA,4DAAI;IACtD,8EAAkC;IAAA,uDAA0B;;IAAA,4DAAW;IACzE,4DAAM;;;IAHA,0DAAyI;IAAzI,kOAAyI;IAE3G,0DAA0B;IAA1B,wJAA0B;;;IAgB9D,oEAAwC;IAAA,uDAAgC;IAAA,4DAAI;;;IAApC,0DAAgC;IAAhC,qGAAgC;;;IAF1E,0EAAmF;IACjF,qEAAI;IAAA,gFAAqB;IAAA,4DAAK;IAC9B,4GAA4E;IAC5E,+EAAuB;IAAA,uDAA+B;;IAAA,4DAAW;IACnE,4DAAM;;;IAFA,0DAAkC;IAAlC,qGAAkC;IACf,0DAA+B;IAA/B,6JAA+B;;AD3F1D,MAAM,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ;AAmBpC,MAAM,YAAY;IAwBvB;QAvBA,UAAK,GAAG,QAAQ;QAChB,UAAK,GAAG,QAAQ,UAAU,IAAI,8DAAU,EAAE;QAG1C,YAAO,GAAuB,EAAE;QAChC,cAAS,GAAuB,EAAE;QAClC,gBAAW,GAAkB,EAAE;QAC/B,mBAAc,GAAkB,EAAE;QAClC,qBAAgB,GAAwB,EAAE;QAG1C,UAAK,GAAc;YACjB,KAAK,EAAE,cAAc;YACrB,QAAQ,EAAE,CAAC;YACX,GAAG,EAAE,IAAI,CAAC,KAAK;YACf,MAAM,EAAE,EAAE;YACV,WAAW,EAAE,EAAE;YACf,WAAW,EAAE,EAAE;YACf,QAAQ,EAAE;gBACR,IAAI,EAAC,EAAE;aACR;SACF;QAGC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,cAAc;QACjC,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,OAAM,CAAC,GAAG,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;IACrF,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,GAAG,CAAC,yBAAyB,EAAE,IAAI,CAAC,KAAK,CAAC;QAC/C,IAAI;YACF,IAAI,CAAC,OAAO,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,aAAa;YAChC,IAAI,CAAC,GAAG,CAAC,sBAAsB,CAAC;SACjC;QAAC,OAAO,GAAG,EAAE;YACZ,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE;gBACd,OAAO,EAAE,kCAAkC;aAC5C,CAAC;SACH;IACH,CAAC;IAED,OAAO;QACL,IAAI,CAAC,UAAU,GAAG,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3C,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,GAAG,EAAE;YAC5B,IAAI,CAAC,GAAG,CAAC,iCAAiC,CAAC;YAC3C,IAAI,CAAC,eAAe,EAAE;YACtB,IAAI,CAAC,qBAAqB,EAAE;YAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,eAAe;QACpC,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,OAAO,GAAG,CAAC,EAAS,EAAO,EAAE;YAC3C,IAAI,CAAC,KAAK,CACR,EAAE,EACF,EAAC,OAAO,EAAE,cAAc,EAAC,CAC1B;QACH,CAAC;QAED,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,CAAC,CAAC,EAAE,EAAE;YAChC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,kBAAkB;YACrC,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;YAErB,IAAI;gBACF,MAAM,IAAI,GAAe,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;gBAC3C,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,IAAI;gBAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;aACzB;YAAC,OAAO,GAAG,EAAE;gBACZ,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,CAAC,CAAC;gBACxB,IAAI,CAAC,KAAK,CAAC,GAAG,EAAE,uBAAuB,CAAC,CAAC;gBACxC,IAAI,CAAC,KAAK,CAAC,MAAc,CAAC,KAAK,GAAG,GAAG;aACvC;QACH,CAAC;IACH,CAAC;IAED,aAAa,CAAC,UAA6B;QACzC,uEAAa,CAAC,UAAU,CAAC;IAC3B,CAAC;IAED,aAAa,CAAC,IAAgB;QAC5B,QAAQ,IAAI,CAAC,IAAI,EAAE;YACjB,KAAK,+DAAiB,CAAC,OAAO;gBAC5B,OAAO,CAAC,GAAG,CAAC,WAAW,EAAE,IAAI,CAAC;gBAC9B,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI;gBACxB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,wEAAkB,CAAC,MAAM,CAAC,CAAC;gBAC5E,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,wEAAkB,CAAC,MAAM,CAAC,CAAC;gBAChF,IAAI,CAAC,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC,WAAW,CAAC;gBACzC,IAAI,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,cAAc,CAAC;gBAC9C,MAAM;YAER,KAAK,+DAAiB,CAAC,gBAAgB;gBACrC,IAAI,IAAI,CAAC,IAAI,EAAE;oBACb,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI;oBACjC,IAAI,CAAC,GAAG,CAAC,kBAAkB,EAAE,IAAI,CAAC,IAAI,CAAC;iBACxC;gBACD,MAAM;YAER,KAAK,+DAAiB,CAAC,SAAS;gBAC9B,MAAM,OAAO,GAAG,IAAI,CAAC,IAAI;gBACzB,IAAI,CAAC,GAAG,CAAC;oBACP,OAAO,EAAE,6BAA6B,OAAO,CAAC,MAAM,EAAE;iBACvD,CAAC;gBACF,IAAI,CAAC,SAAS,GAAG,OAAO;gBACxB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;oBAC/B,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;wBAC5B,IAAI,kEAAY,CAAC,MAAM,EAAE,OAAO,CAAC,EAAE;4BACjC,MAAM,CAAC,UAAU,GAAG,IAAI;yBACzB;oBACH,CAAC,CAAC;gBACJ,CAAC,CAAC;gBACF,MAAK;YAEP,KAAK,+DAAiB,CAAC,kBAAkB;gBACvC,MAAM,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK;gBAC7B,MAAM,WAAW,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM;gBAEpC,mDAAmD;gBACnD,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CACzC,MAAM,CAAC,EAAE,CAAC,kEAAY,CAAC,MAAM,EAAE,WAAW,CAAC,CAC5C;gBAED,IAAI,eAAe,EAAE;oBACnB,eAAe,CAAC,SAAS,GAAG,KAAK;oBAEjC,IAAI,IAAI,CAAC,eAAe,IAAI,kEAAY,CAAC,eAAe,EAAE,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,EAAE;wBAC1F,MAAM,eAAe,GAAG,sFAAqB,CAAC,eAAe,CAAC;wBAC9D,eAAe,CAAC,OAAO,GAAG,eAAe;wBACzC,eAAe,CAAC,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG;wBAE9C,MAAM,CAAC,OAAO,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;4BACpD,MAAM,GAAG,GAAG,OAAO,CAAC,CAAC,CAAC;4BACtB,OAAO,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,eAAe,CAAC,QAAQ,CAAC,GAAG,CAAC;wBACpD,CAAC,CAAC;qBACH;iBACF;gBACD,MAAK;YAEP,KAAK,+DAAiB,CAAC,KAAK;gBAC1B,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC;gBACrB,MAAK;YAEP;gBACE,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC;SAC7C;IACH,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,cAAc,CAAC;QACrC,IAAI,CAAC,OAAO,CAAC,IAAI,iBACf,UAAU,EAAE,KAAK,EACjB,SAAS,EAAE,EAAE,IACV,cAAc,EACjB;IACJ,CAAC;IAED,qBAAqB;QACnB,IAAI,CAAC,OAAO,CAAC,+DAAiB,CAAC,mBAAmB,CAAC;IACrD,CAAC;IAED,OAAO,CAAC,IAAuB,EAAE,IAAU;QACzC,MAAM,OAAO,GAAG,EAAC,IAAI,EAAE,IAAI,EAAC;QAC5B,IAAI,CAAC,KAAK,CAAC,WAAW,GAAG,OAAO;QAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC7C,OAAO,IAAI;IACb,CAAC;IAED,eAAe;QACb,IAAI,CAAC,OAAO,CAAC,+DAAiB,CAAC,OAAO,CAAC;IACzC,CAAC;IAED,mBAAmB;QACjB,IAAI,CAAC,OAAO,CAAC,+DAAiB,CAAC,mBAAmB,CAAC;IACrD,CAAC;IAED,cAAc,CAAC,MAAwB;;QACrC,IAAI,SAAS,GAAG,aAAM,CAAC,OAAO,0CAAE,IAAI,OAAM,EAAE;QAE5C,IAAI,MAAM,CAAC,YAAY,EAAE;YACvB,SAAS,IAAI,MAAM,GAAE,MAAM,CAAC,YAAY;SACzC;QAED,IAAI,CAAC,GAAG,CAAC;YACP,OAAO,EAAE,2BAA2B,SAAS,EAAE,EAAE,MAAM;SACxD,CAAC;QAEF,IAAI,IAAI,GAAsB,+DAAiB,CAAC,cAAc;QAE9D,MAAM,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAE,mEAAY,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAC/E,IAAG,WAAW,EAAC;YACb,IAAI,GAAG,+DAAiB,CAAC,iBAAiB;YAC1C,OAAO,MAAM,CAAC,UAAU;YACxB,OAAO,WAAW,CAAC,UAAU;YAC7B,IAAI,CAAC,GAAG,CAAC;gBACP,OAAO,EAAE,qBAAqB,SAAS,EAAE;aAC1C,CAAC;SACH;QAED,OAAO,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC;QAC7C,MAAM,gBAAgB,GAAI,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,EAAE,CAAC,CAAC,GAAG,GAAG,EAAC,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;QAC/H,MAAM,eAAe,GAAG,gBAAgB,CAAC,IAAI,CAAC,MAAM,GAAE,mEAAY,CAAC,MAAM,EAAE,MAAM,CAAC,UAAU,CAAC,CAAC;QAE9F,IAAI,eAAe,EAAE;YACnB,IAAI,CAAC,eAAe,GAAG,eAAe;SACvC;QAED,IAAI,CAAC,GAAG,CAAC;YACP,OAAO,EAAE,sCAAsC,SAAS,EAAE;SAC3D,CAAC;QAEF,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC;QAE1B,IAAI,MAAM,KAAK,cAAc,EAAE;YAC7B,IAAI,CAAC,aAAa,CAAC;gBACjB,IAAI,EAAE,+DAAiB,CAAC,SAAS;gBACjC,IAAI,EAAE;oBACJ,OAAO,EAAE,IAAI,CAAC,OAAO;oBACrB,WAAW,EAAE,IAAI,CAAC,WAAW;oBAC7B,KAAK,EAAE,EAAC,OAAO,EAAC,YAAY,EAAC;oBAC7B,MAAM;iBACP;aACF,CAAC;SACH;IACH,CAAC;IAED,KAAK,CAAC,KAAoB,EAAE,GAAG,KAAK;QAClC,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;YAC7B,KAAK,GAAG,IAAI,KAAK,CAAC,KAAK,CAAC;SACzB;QACD,MAAM,QAAQ,GAAG,gDAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,QAAQ,EAAE;QAC5C,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,iDAAO,QAAQ,GAAK,KAAK,GAAK,KAAK,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC,iCAAK,GAAG,GAAK,GAAG,EAAE,EAAE,EAAE,CAAC,CAAC;QAC1G,OAAO,CAAC,GAAG,CAAC,wBAAwB,CAAC;QACrC,OAAO,CAAC,KAAK,iBAAE,KAAK,IAAK,KAAK,EAAE;IAClC,CAAC;IAED,IAAI,CAAC,GAAG,IAAS;QACf,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI;QAC/B,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC;IACpB,CAAC;IAED,GAAG,CAAC,GAAG,IAAS;QACd,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAG,IAAI;QAE/B,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE;YACnB,OAAO,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC;SAC1C;QAED,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC;IACnB,CAAC;;wEAtPU,YAAY;4FAAZ,YAAY;QCzBzB,yEAA8E;QAC5E,yEAA2C;QACzC,qEAAI;QAAA,uDAA+B;QAAA,4DAAK;QACxC,8EAA4E;QAC1E,uDACF;;QAAA,4DAAW;QACX,wGAgBM;QACR,4DAAM;QAEN,yEAA4C;QAC1C,qEAAI;QAAA,uEAAW;QAAA,4DAAK;QACpB,qEAAG;QACD,6EAAoD;QAA9B,qIAAS,uBAAmB,IAAC;QAAC,+EAAmB;QAAA,4DAAS;QAClF,4DAAI;QACJ,0EAAuB;QACrB,0EAA2C;QACzC,0GASM;QACR,4DAAM;QACR,4DAAM;QACR,4DAAM;QAEN,0EAA2C;QACzC,sEAAI;QAAA,yEAAa;QAAA,4DAAK;QACtB,0EAAuB;QACrB,0GAQM;QACR,4DAAM;QACR,4DAAM;QAEN,0EAA2C;QACzC,sEAAI;QAAA,6EAAiB;QAAA,4DAAK;QAC1B,0EAA2C;QACzC,4HAUe;;QACjB,4DAAM;QAEN,2GAIM;QACR,4DAAM;QAEN,2EAAqD;QACnD,sEAAI;QAAA,wDAA2B;QAAA,4DAAK;QACpC,+EAAkC;QAAA,wDAAkB;;QAAA,4DAAW;QACjE,4DAAM;QAEN,2EAAqD;QACnD,sEAAI;QAAA,wDAAmC;QAAA,4DAAK;QAC5C,+EAAkC;QAAA,wDAAsB;;QAAA,4DAAW;QACrE,4DAAM;QAEN,2GAIM;QAGN,0EAA2C;QACzC,sEAAI;QAAA,iEAAK;QAAA,4DAAK;QACd,+EAAkC;QAChC,wDACF;;QAAA,4DAAW;QACb,4DAAM;QACR,4DAAM;QAMN,4EAA+B;;QA/GvB,0DAA+B;QAA/B,yGAA+B;QACD,0DAAyC;QAAzC,oGAAyC;QACzE,0DACF;QADE,qKACF;QACsB,0DAAY;QAAZ,kFAAY;QA0BR,0DAAc;QAAd,oFAAc;QAiBhB,0DAAiB;QAAjB,uFAAiB;QAeN,0DAA8B;QAA9B,4JAA8B;QAarB,0DAAqB;QAArB,qFAAqB;QAQ7D,0DAA2B;QAA3B,qGAA2B;QACG,0DAAkB;QAAlB,+IAAkB;QAIhD,0DAAmC;QAAnC,6GAAmC;QACL,0DAAsB;QAAtB,mJAAsB;QAGpD,0DAA0B;QAA1B,0FAA0B;QAU5B,0DACF;QADE,kKACF;;ADyKJ,MAAM,cAAc,GAAgB;IAClC,IAAI,EAAE,WAAW;IACjB,SAAS,EAAE,CAAC,CAAC;IACb,KAAK,EAAE,CAAC,CAAC;IACT,SAAS,EAAE,CAAC,CAAC;IACb,SAAS,EAAE,CAAC,CAAC;IACb,QAAQ,EAAE,CAAC,EAAE;IACb,OAAO,EAAE,cAAc;IACvB,YAAY,EAAE,WAAW;CAE1B;;;;;;;;;;;;;AElSD;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAGF;AACT;;AAaxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;;;;;;;;;;;;;ACVpB;AAAA;AAAe,SAAS,qBAAqB,CAAC,SAA2B;IACvE,MAAM,cAAc,GAAG,EAAE;IAEzB,IAAI,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE;QAC1C,OAAO,cAAc;KACtB;IAED,MAAM,WAAW,GAAa,SAAS,CAAC,SAAS,CAAC,IAAI;IAEtD,MAAM,UAAU,GAAwB,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,EAAE;QACjF,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC;aACvB,MAAM,CAAC,CAAC,UAAU,EAAE,EAAE,CACrB,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,KAAK,IAAI,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,KAAK,OAAO,CACtF;aACA,OAAO,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,CAAC,UAAU,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAEnE,OAAO,GAAG;IACd,CAAC,EAAE,EAAE,CAAC;IAEN,OAAO,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,EAAE;QACnD,MAAM,OAAO,GAAG,UAAU,CAAC,UAAU,CAAC;QACtC,MAAM,UAAU,GAAG,OAAO,CAAC,GAAG;QAC9B,MAAM,UAAU,GAAW,WAAW,CAAC,UAAU,CAAC;QAElD,qBAAqB;QACrB,IAAI,OAAO,CAAC,KAAK,KAAK,UAAU,EAAE;YAChC,OAAO,IAAI;SACZ;aAAM;YACL,MAAM,YAAY,GAAW,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI;YAEzD,uBAAuB;YACvB,MAAM,KAAK,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,CAAC,YAAY,EAAE,EAAE;gBAC1D,IAAI,YAAY,KAAK,UAAU,EAAE;oBAC/B,OAAO,KAAK;iBACb;gBAED,MAAM,WAAW,GAAG,UAAU,CAAC,YAAY,CAAC;gBAE5C,IAAI,WAAW,CAAC,GAAG,KAAK,OAAO,CAAC,GAAG,EAAE;oBACnC,OAAO,KAAK;iBACb;gBAED,MAAM,YAAY,GAAW,WAAW,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI;gBACjE,MAAM,SAAS,GAAG,OAAO,CAAC,IAAI,GAAG,YAAY,GAAG,YAAY,uBAAqB;gBACjF,IAAI,SAAS,KAAK,UAAU,EAAE;oBAC5B,OAAO,IAAI;iBACZ;YACH,CAAC,CAAC;YAEF,IAAI,KAAK,EAAE;gBACT,OAAO,IAAI;aACZ;SACF;QAED,OAAO,KAAK;IACd,CAAC,CAAC;AACJ,CAAC;;;;;;;;;;;;;AC1DD;AAAA;AAAe,SAAS,QAAQ,CAAC,GAAG,IAAI;IACxC,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AAC5C,CAAC;;;;;;;;;;;;;ACDD;AAAA;AAAA;AAAA;AAAuD;;;AAGvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACRuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main.js","sourcesContent":["import delayLog from \"../../../shared/delayLog.function\";\nimport { Subject, Subscription } from \"rxjs\";\nimport { GameControlEvents } from \"./GameControlEvents\";\n\nexport default function mapController(\n  gameController: GameControlEvents\n): Promise<void> {\n  return new Promise(res => () => {\n    const subs = new Subscription()\n    const gcChangeListener = new GameControlChangeListener(gameController)\n\n    this.subs.add(\n      gameController.notIdle.subscribe(() => gcChangeListener.handler()),\n      gcChangeListener.completed.subscribe(() => {\n        subs.unsubscribe()\n        res()\n      })\n    )\n\n    gcChangeListener.askForButton()\n  })\n}\n\nclass GameControlChangeListener {\n  completed: Subject<void> = new Subject()\n\n  constructor(public gameController: GameControlEvents) {}\n\n  getNextQuestion() {\n    return Object.keys(this.gameController.map).find(\n      (key) => this.gameController.map[key] === null\n    )\n  }\n\n  askForButton() {\n    const key = this.getNextQuestion();\n    delayLog(\"\\x1b[36mPush the \" + key + \" key\\x1b[0m\");\n  }\n\n  // listener from button press\n  handler (): Promise<void> {\n    const data = this.gameController.lastData\n    const key = this.getNextQuestion()\n    const diffs = this.gameController.filterIdleDifferences(data)\n    const diffKeys = Object.keys(diffs)\n    const map = this.gameController.map\n\n    if (diffKeys.length === 0) {\n      return;\n    } else if (diffKeys.length > 1) {\n      console.log(\"multiple buttons activated\");\n    } else {\n      const pos = Number(diffKeys[0])\n      const value = diffs[diffKeys[0]]\n      const alreadySet = Object.keys(map).find((key) =>\n        map[key] && map[key].pos === pos && map[key].value === value\n      );\n\n      if (alreadySet) {\n        console.log(\"Key already set: \" + alreadySet, { pos, value });\n      } else {\n        this.gameController.map[key] = {\n          pos, value, idle: this.gameController.idle[pos], updatedAt: Date.now()\n        }\n        // console.log(gameController.map);\n        console.log(\"SAVED KEY: \" + key + \" as \", { pos, value })\n      }\n    }\n\n    console.log();\n\n    if (this.getNextQuestion()) {\n      this.askForButton()\n    } else {\n      console.log(\"Buttons mapped\", this.gameController.map);\n      this.completed.next()\n    }\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { IDeviceMeta } from \"./shared/typings\";\n\nexport function isDeviceController(device: IDeviceMeta): boolean {\n  return (device.usage === 5 && device.usagePage === 1)\n  || (device.usage === 4 && device.usagePage === 1)\n  || device.product.toLowerCase().indexOf(\"controller\") >= 0\n  || device.product.toLowerCase().indexOf(\"game\") >= 0\n  || device.product.toLowerCase().indexOf(\"joystick\") >= 0;\n}\n\nexport function devicesMatch(device: IDeviceMeta, lDevice: IDeviceMeta): boolean {\n  return device.productId === lDevice.productId && device.vendorId === lDevice.vendorId\n}","export enum SocketMessageType {\n  // client side\n  UNSUBSCRIBEDEVICE = 'unsubscribeDevice',\n  LISTENTODEVICE = 'listenToDevice',\n  REFRESH = 'refresh',\n  GETSAVEDCONTROLLERS = 'getSavedControllers',\n\n  // server side\n  DEVICEEVENT_CHANGE = 'deviceEvent.change',\n  LISTENERS = 'listeners',\n  SAVEDCONTROLLERS = 'savedControllers',\n  DEVICES = 'devices',\n  ERROR = 'error',\n}\n","import { Component } from '@angular/core'\nimport { WssMessage, IDeviceMeta } from '../../../shared/typings'\nimport { SocketMessageType } from '../../../shared/enums'\nimport GameControlEvents from './GameControlEvents'\nimport mapController from './mapController.function'\nimport {\n  // socketHost,\n  socketPort } from '../../../shared/config.json'\nimport { devicesMatch, isDeviceController } from '../../../index.shared'\nimport decodeDeviceMetaState from './decodeControllerButtonStates.function'\nimport { ack } from 'ack-x/js/ack'\n\nconst socketHost = window.location.hostname\n\nexport interface IDeviceMetaState extends IDeviceMeta {\n  subscribed: boolean\n  lastEvent: any\n  map?: {\n    [buttonName: string]: {\n      pressed: boolean\n      idle?: number\n      pos: number\n    }\n  } // populated if matched to savedController\n  pressed?: string[] // populated if matched to savedController\n}\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'webapp'\n  wsUrl = `ws://${socketHost}:${socketPort}`\n  connection: WebSocket\n\n  devices: IDeviceMetaState[] = []\n  listeners: IDeviceMetaState[] = []\n  controllers: IDeviceMeta[] = []\n  nonControllers: IDeviceMeta[] = []\n  savedControllers: Record<string, any> = {}\n  savedController: Record<string, any>\n\n  debug: DebugData = {\n    state: 'initializing',\n    messages: 0,\n    url: this.wsUrl,\n    socket: {},\n    lastWssData: {},\n    lastPayload: {},\n    lastLogs: {\n      info:{}\n    }\n  }\n\n  constructor() {\n    this.debug.state = 'constructing'\n    window.onerror = err => this.error(typeof(err) === 'string' ? new Error(err) : err)\n  }\n\n  ngOnInit(){\n    this.log('connecting to websocket', this.wsUrl)\n    try {\n      this.connect()\n      this.debug.state = 'constructed'\n      this.log('web socket connected')\n    } catch (err) {\n      this.error(err, {\n        message: 'Could not connect to web sockets',\n      })\n    }\n  }\n\n  connect() {\n    this.connection = new WebSocket(this.wsUrl)\n    this.connection.onopen = () => {\n      this.log('web socket handshake successful')\n      this.fetchUsbDevices()\n      this.fetchSavedControllers()\n      this.debug.state = 'socket opened'\n    }\n\n    this.connection.onerror = (ev: Event): any => {\n      this.error(\n        ev,\n        {message: `Socket error`},\n      )\n    }\n\n    this.connection.onmessage = (e) => {\n      this.debug.state = 'message-received'\n      ++this.debug.messages\n\n      try {\n        const data: WssMessage = JSON.parse(e.data)\n        this.debug.lastWssData = data\n        this.handleMessage(data)\n      } catch (err) {\n        console.log('e.data', e)\n        this.error(err, 'client message failed');\n        (this.debug.socket as any).error = err\n      }\n    }\n  }\n\n  mapController(controller: GameControlEvents) {\n    mapController(controller)\n  }\n\n  handleMessage(data: WssMessage) {\n    switch (data.type) {\n      case SocketMessageType.DEVICES:\n        console.log('data.data', data)\n        this.devices = data.data\n        this.controllers = this.devices.filter(device => isDeviceController(device))\n        this.nonControllers = this.devices.filter(device => !isDeviceController(device))\n        this.log('controllers', this.controllers)\n        this.log('other devices', this.nonControllers)\n        break;\n\n      case SocketMessageType.SAVEDCONTROLLERS:\n        if (data.data) {\n          this.savedControllers = data.data\n          this.log('savedControllers', data.data)\n        }\n        break;\n\n      case SocketMessageType.LISTENERS:\n        const devices = data.data\n        this.log({\n          message: `listeners update received ${devices.length}`\n        })\n        this.listeners = devices\n        this.listeners.forEach(lDevice => {\n          this.devices.forEach(device => {\n            if (devicesMatch(device, lDevice)) {\n              device.subscribed = true\n            }\n          })\n        })\n        break\n\n      case SocketMessageType.DEVICEEVENT_CHANGE:\n        const event = data.data.event\n        const eventDevice = data.data.device\n\n        // this.log({message: `device change event`, data})\n        const matchedListener = this.listeners.find(\n          device => devicesMatch(device, eventDevice)\n        )\n\n        if (matchedListener) {\n          matchedListener.lastEvent = event\n\n          if (this.savedController && devicesMatch(matchedListener, this.savedController.deviceMeta)) {\n            const pressedKeyNames = decodeDeviceMetaState(matchedListener)\n            matchedListener.pressed = pressedKeyNames\n            matchedListener.map = this.savedController.map\n\n            Object.entries(matchedListener.map).forEach(current => {\n              const key = current[0]\n              current[1].pressed = pressedKeyNames.includes(key)\n            })\n          }\n        }\n        break\n\n      case SocketMessageType.ERROR:\n        this.error(data.data)\n        break\n\n      default:\n        this.warn('unknown event type', data.type)\n    }\n  }\n\n  addTestController() {\n    this.controllers.push(testController)\n    this.devices.push({\n      subscribed: false,\n      lastEvent: {},\n      ...testController\n    })\n  }\n\n  fetchSavedControllers() {\n    this.wssSend(SocketMessageType.GETSAVEDCONTROLLERS)\n  }\n\n  wssSend(type: SocketMessageType, data?: any) {\n    const payload = {type, data}\n    this.debug.lastPayload = payload\n    this.connection.send(JSON.stringify(payload))\n    return this\n  }\n\n  fetchUsbDevices() {\n    this.wssSend(SocketMessageType.REFRESH)\n  }\n\n  getSavedControllers() {\n    this.wssSend(SocketMessageType.GETSAVEDCONTROLLERS)\n  }\n\n  listenToDevice(device: IDeviceMetaState) {\n    let stringRef = device.product?.trim() || ''\n\n    if (device.manufacturer) {\n      stringRef += ' by '+ device.manufacturer\n    }\n\n    this.log({\n      message: `attempting to listen to ${stringRef}`, device\n    })\n\n    let type: SocketMessageType = SocketMessageType.LISTENTODEVICE\n\n    const deviceMatch = this.listeners.find(xDevice=>devicesMatch(device, xDevice))\n    if(deviceMatch){\n      type = SocketMessageType.UNSUBSCRIBEDEVICE\n      delete device.subscribed\n      delete deviceMatch.subscribed\n      this.log({\n        message: `Unsubscribed from ${stringRef}`\n      })\n    }\n\n    console.log('current', this.savedControllers)\n    const savedControllers =  Object.values(this.savedControllers).reduce((all, current) => [...all,...Object.values(current)], [])\n    const savedController = savedControllers.find(xSaved=>devicesMatch(device, xSaved.deviceMeta))\n\n    if (savedController) {\n      this.savedController = savedController\n    }\n\n    this.log({\n      message: `requesting web socket to listen to ${stringRef}`\n    })\n\n    this.wssSend(type, device)\n\n    if (device === testController) {\n      this.handleMessage({\n        type: SocketMessageType.LISTENERS,\n        data: {\n          devices: this.devices,\n          controllers: this.controllers,\n          event: {message:'test-event'},\n          device\n        }\n      })\n    }\n  }\n\n  error(error: Event | Error, ...extra) {\n    if (typeof error === 'string') {\n      error = new Error(error)\n    }\n    const readable = ack.error(error).toObject()\n    this.debug.lastLogs.error = {...readable, ...error, ...extra.reduce((all, one) => ({...all, ...one}), {})}\n    console.log('lastLogs.error updated')\n    console.error({error, ...extra})\n  }\n\n  warn(...data: any) {\n    this.debug.lastLogs.info = data\n    console.warn(data)\n  }\n\n  log(...data: any) {\n    this.debug.lastLogs.info = data\n\n    if (data[0].message) {\n      return console.log(data[0].message, data)\n    }\n\n    console.log(data)\n  }\n}\n\nconst testController: IDeviceMeta = {\n  path: 'test-path',\n  interface: -1,\n  usage: -1,\n  usagePage: -1,\n  productId: -1,\n  vendorId: -32,\n  product: 'test-product',\n  manufacturer: 'test-manu',\n\n}\n\ninterface DebugData {\n  state: 'initializing' | 'constructing' | 'constructed' | 'message-received' | 'socket opened'\n  messages: number\n  url: string\n  socket: Record<string, any>,\n  lastWssData: Record<string, any>,\n  lastPayload: Record<string, any>,\n  lastLogs: {\n    info: Record<string, any>\n    error?: Record<string, any>\n  }\n}","<style>\n  textarea.code {\n    height:500px;width:100%;/*max-width: 500px;*/\n    min-width:300px;\n  }\n</style>\n<div style=\"display:flex;flex-wrap:wrap\" class=\"child-pad-xs child-margin-xs\">\n  <div class=\"flex2 border border-radius-10\">\n    <h3>listeners: {{listeners.length}}</h3>\n    <textarea class=\"code\" wrap=\"off\" [style.height.em]=\"25 * listeners.length\">\n      {{listeners | json}}\n    </textarea>\n    <div *ngFor=\"let item of listeners\" style=\"display:flex;flex-wrap:wrap;\">\n      <div *ngFor=\"let value of item.lastEvent?.data\" style=\"border:1px solid black;border-radius: 5px;margin:1em;padding:.5em;\">\n        {{value}}\n      </div>\n      <!--\n        <div *ngFor=\"let value of item.pressed\" style=\"border:1px solid black;border-radius: 5px;margin:1em;padding:.5em;\">\n          {{value}}\n        </div>\n      -->\n      <div style=\"display:flex;flex-wrap:wrap\">\n        <div>\n          <ng-container *ngFor=\"let button of item.map | keyvalue\">\n            <button type=\"button\" [disabled]=\"button.value.pressed\">{{button.key}}</button>\n          </ng-container>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"flex-1 border border-radius-10\">\n    <h3>Controllers</h3>\n    <p>\n      <button type=\"button\" (click)=\"addTestController()\">add test controller</button>\n    </p>\n    <div class=\"flex-wrap\">\n      <div style=\"display:flex;flex-wrap: wrap;\">\n        <div *ngFor=\"let item of controllers\">\n          <button\n            type=\"button\" style=\"margin:.5em;font-size:1.1em;padding:.4em;\"\n            (click)=\"listenToDevice(item)\"\n            [style.background-color] = \"item.subscribed && 'blue'\"\n            [style.color] = \"item.subscribed && 'white'\"\n          >\n            listen to {{ item.product || item.productId + ':' + item.vendorId }}\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"flex2 border border-radius-10\">\n    <h4>Other Devices</h4>\n    <div class=\"flex-wrap\">\n      <div *ngFor=\"let item of nonControllers\">\n        <button\n          type=\"button\" style=\"margin:.5em;\" (click)=\"listenToDevice(item)\"\n          [style.background-color] = \"item.subscribed && 'blue'\"\n          [style.color] = \"item.subscribed && 'white'\"\n        >\n          {{ item.product || item.productId + ':' + item.vendorId }}\n        </button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"flex1 border border-radius-10\">\n    <h4>Saved Controllers</h4>\n    <div style=\"display:flex;flex-wrap: wrap;\">\n      <ng-container *ngFor=\"let vendor of savedControllers | keyvalue\">\n        <div *ngFor=\"let item of vendor.value | keyvalue\">\n          <button type=\"button\" style=\"margin:.5em;\"\n            (click)=\"savedController = item.value\"\n            [style.background-color] = \"savedController === item.value && 'blue' || null\"\n            [style.color] = \"savedController === item.value && 'white' || null\"\n          >\n            {{ item.value.deviceMeta.product || item.value.deviceMeta.productId + ':' + item.value.deviceMeta.vendorId }}\n          </button>\n        </div>\n      </ng-container>\n    </div>\n\n    <div class=\"flex1 border border-radius-10\" *ngIf=\"savedController\">\n      <h3>Saved Controller: {{ savedController.deviceMeta.product || savedController.deviceMeta.productId + ':' + item.value.deviceMeta.vendorId }}</h3>\n      <p>Details of past connected and saved controllers</p>\n      <textarea class=\"code\" wrap=\"off\">{{savedController | json}}</textarea>\n    </div>\n  </div>\n\n  <div class=\"flex1 flex-wrap border border-radius-10\">\n    <h3>Devices: {{devices.length}}</h3>\n    <textarea class=\"code\" wrap=\"off\">{{devices | json}}</textarea>\n  </div>\n\n  <div class=\"flex1 flex-wrap border border-radius-10\">\n    <h3>Controllers: {{controllers.length}}</h3>\n    <textarea class=\"code\" wrap=\"off\">{{controllers | json}}</textarea>\n  </div>\n\n  <div *ngIf=\"debug.lastLogs.error\" class=\"flex2 border border-radius-10 bg-warning\">\n    <h3>Recent error occurred</h3>\n    <p *ngIf=\"debug.lastLogs.error.message\">{{debug.lastLogs.error.message}}</p>\n    <textarea class=\"code\">{{debug.lastLogs.error | json}}</textarea>\n  </div>\n\n  <!--  DEBUG PANEL -->\n  <div class=\"flex2 border border-radius-10\">\n    <h3>debug</h3>\n    <textarea class=\"code\" wrap=\"off\">\n      {{debug | json}}\n    </textarea>\n  </div>\n</div>\n\n\n\n\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { IDeviceMetaState } from './app.component'\n\nexport default function decodeDeviceMetaState(metaState: IDeviceMetaState): string[] {\n  const pressedButtons = []\n\n  if (!metaState.map || !metaState.lastEvent) {\n    return pressedButtons\n  }\n\n  const currentBits: number[] = metaState.lastEvent.data\n\n  const changedMap: Record<string, any> = currentBits.reduce((all, current, index) => {\n    Object.keys(metaState.map)\n      .filter((buttonName) =>\n        metaState.map[buttonName].pos === index && metaState.map[buttonName].idle !== current\n      )\n      .forEach(buttonName => all[buttonName] = metaState.map[buttonName])\n\n      return all\n  }, {})\n\n  return Object.keys(changedMap).filter((buttonName) => {\n    const current = changedMap[buttonName]\n    const currentPos = current.pos\n    const stateValue: number = currentBits[currentPos]\n\n    // direct value match\n    if (current.value === stateValue) {\n      return true\n    } else {\n      const currentValue: number = current.value - current.idle\n\n      // combined value match\n      const match = Object.keys(changedMap).find((otherBtnName) => {\n        if (otherBtnName === buttonName) {\n          return false\n        }\n\n        const compareMeta = changedMap[otherBtnName]\n\n        if (compareMeta.pos !== current.pos) {\n          return false\n        }\n\n        const compareValue: number = compareMeta.value - compareMeta.idle\n        const testValue = current.idle + compareValue + currentValue//15 + 16 + 16 === 47\n        if (testValue === stateValue) {\n          return true\n        }\n      })\n\n      if (match) {\n        return true\n      }\n    }\n\n    return false\n  })\n}\n","export default function delayLog(...args) {\nsetTimeout(() => console.log(...args), 300);\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}